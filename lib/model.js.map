{"version":3,"sources":["../src/model.js"],"names":["Module","importList","declList","decls","exports","defaultExport","undefined","Import","moduleSpec","ImportItem","originalId","localId","Const","id","body","exported","Expression","new","target","Error","value","LogicalOr","items","item","match","LogicalAnd","ChainedCall","calls","max","length","i","eval","validate","Call","args","source","Object_","properties","index","occ","Array","fill","Object","getOwnPropertyNames","name","prop","minCount","maxCount","Array_","isArray","vidx","o","Property","ListItem","Literal","Regexp","regexp","test"],"mappings":"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","file":"model.js","sourcesContent":["\nexport class Module {\n  constructor (importList, declList) {\n    this.importList = importList\n    this.declList = declList\n    this.decls = {}\n    this.exports = {}\n    this.defaultExport = undefined\n  }\n}\n\nexport class Import {\n  constructor (moduleSpec, importList) {\n    this.moduleSpec = moduleSpec\n    this.importList = importList\n  }\n}\n\nexport class ImportItem {\n  constructor (originalId, localId) {\n    this.originalId = originalId\n    this.localId = localId\n  }\n}\n\nexport class Const {\n  constructor (id, body, exported) {\n    this.id = id\n    this.body = body\n    this.exported = exported\n  }\n}\n\n// expression\n\nexport class Expression {\n  constructor () {\n    if (new.target === Expression) {\n      throw new Error(`can't instantiate abstract class`)\n    }\n  }\n\n  match (value) {\n    throw new Error(`can't call abstract method`)\n  }\n}\n\nexport class LogicalOr extends Expression {\n  constructor (items) {\n    super()\n    this.items = items\n  }\n\n  match (value) {\n    for (let item of this.items) {\n      if (item.match(value)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nexport class LogicalAnd extends Expression {\n  constructor (items) {\n    super()\n    this.items = items\n  }\n\n  match (value) {\n    for (let item of this.items) {\n      if (!item.match(value)) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\nexport class ChainedCall extends Expression {\n  constructor (calls) {\n    super()\n    this.calls = calls\n  }\n\n  match (value) {\n    let max = this.calls.length - 1\n    for (let i = 0; i < max; i++) {\n      value = this.calls[i].eval(value)\n    }\n    return this.calls[max].validate(value)\n  }\n}\n\nexport class Call extends Expression {\n  constructor (id, args) {\n    super()\n    this.id = id\n    this.args = args\n  }\n\n  eval () {\n    return this.value\n  }\n\n  match (value) {\n    this.source.eval()\n  }\n}\n\nexport class Object_ extends Expression {\n  constructor (properties) {\n    super()\n    this.properties = properties\n    for (let i = 0; i < properties.length; i++) {\n      properties[i].index = i\n    }\n  }\n\n  match (value) {\n    if (typeof value !== 'object' || value === null) {\n      return false\n    }\n    let occ = new Array(this.properties.length).fill(0)\n    // this should be optimized to be nearly linear\n    // tip: most property names will be simply strings\n    for (let name of Object.getOwnPropertyNames(value)) {\n      let match = false\n      for (let prop of this.properties) {\n        if (prop.name.match(name) && prop.value.match(value[name])) {\n          match = true\n          occ[prop.index]++\n        }\n      }\n      if (!match) {\n        return false\n      }\n    }\n    for (let prop of this.properties) {\n      if (occ[prop.index] < prop.minCount || occ[prop.index] > prop.maxCount) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\nexport class Array_ extends Expression {\n  constructor (items) {\n    super()\n    this.items = items\n  }\n\n  match (value) {\n    if (!Array.isArray(value)) {\n      return false\n    }\n    let vidx = 0\n    for (let item of this.items) {\n      let o = 0\n      while (o < item.maxCount && vidx < value.length && item.match(value[vidx++])) {\n        o++\n      }\n      if (o < item.minCount) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\n// helpers\n\nexport class Property extends Expression {\n  constructor (name, value, minCount, maxCount) {\n    super()\n    this.name = name\n    this.value = value\n    this.minCount = minCount || 1\n    this.maxCount = maxCount || 1\n  }\n}\n\nexport class ListItem extends Expression {\n  constructor (value) {\n    super()\n    this.value = value\n  }\n}\n\n// leaf nodes\n\nexport class Literal extends Expression {\n  constructor (value) {\n    super()\n    this.value = value\n  }\n\n  eval () {\n    return this.value\n  }\n\n  match (value) {\n    return this.value === value\n  }\n}\n\nexport class Regexp extends Expression {\n  constructor (regexp) {\n    super()\n    this.regexp = regexp\n  }\n\n  eval () {\n    return this.regexp\n  }\n\n  match (value) {\n    return this.regexp.test(value)\n  }\n}\n"]}