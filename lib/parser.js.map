{"version":3,"sources":["../src/parser.js"],"names":["parse","model","parser","semantics","str","initParser","mr","match","failed","recipePath","__dirname","recipe","eval","createSemantics","addOperation","modelActions","Module_short","imports","expr","Module","Module_long","decls","declList","asIteration","exprList","length","push","Const","Import_list","_imp_","_lbr_","items","_rbr_","_from_","moduleSpec","Import","ImportItem_simple","id","ImportItem","Declaration_const","_const_","_eq_","Declaration_export_const","_exp_","Declaration_export_default","_def_","LogicalOr","list","LogicalAnd","LogicalNot","Grouping","_lp_","_rp_","ChainedCall","calls","Call","argsOpt","args","Object","_lb_","props","_rb_","Object_","Array","Array_","ArgumentList","Property","name","_colon_","value","identifier","start","rest","Identifier","source","contents","number","sign","int","_point_","frac","exp","Literal","parseFloat","string","quote1","chars","quote2","regexp","slash1","body","slash2","RegExp","constant_null","_null_","constant_true","_true_","constant_false","_false_"],"mappings":"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","file":"parser.js","sourcesContent":["import { readFileSync } from 'fs'\nimport { join } from 'path'\nimport { makeRecipe } from 'ohm-js'\nimport * as model from './model'\n\nvar parser\nvar semantics\n\nexport function parse (str) {\n  if (!parser) {\n    initParser()\n  }\n  let mr = parser.match(str)\n  if (mr.failed()) {\n    return null\n  } else {\n    return semantics(mr).model()\n  }\n}\n\n/**\n * Loads parser definition and initilizes parser semantics.\n */\nfunction initParser () {\n  let recipePath = join(__dirname, '../ohm/recipe.js')\n  let recipe = readFileSync(recipePath, 'utf-8')\n  // this is the recommended way of loading a parser\n  parser = makeRecipe(eval(recipe)) // eslint-disable-line\n\n  semantics = parser.createSemantics()\n  semantics.addOperation('model', modelActions)\n}\n\nconst modelActions = {\n\n  // module\n\n  Module_short (imports, expr) {\n    return new model.Module(imports.model(), expr.model())\n  },\n  Module_long (imports, decls, expr) {\n    let declList = decls.asIteration().model()\n    let exprList = expr.asIteration().model()\n    if (exprList.length) declList.push(new model.Const('', expr[0], true))\n    return new model.Module(imports.model(), decls.model())\n  },\n\n  // import\n\n  Import_list (_imp_, _lbr_, items, _rbr_, _from_, moduleSpec) {\n    return new model.Import(moduleSpec.model(), items.asIteration().model())\n  },\n  ImportItem_simple (id) {\n    return new model.ImportItem(id.model(), id.model())\n  },\n\n  // declaration\n\n  Declaration_const (_const_, id, _eq_, expr) {\n    return new model.Const(id.model(), expr.model(), false)\n  },\n  Declaration_export_const (_exp_, _const_, id, _eq_, expr) {\n    return new model.Const(id.model(), expr.model(), true)\n  },\n  Declaration_export_default (_exp_, _def_, expr) {\n    return new model.Const('', expr.model(), true)\n  },\n\n  // expression\n\n  LogicalOr (list) {\n    let items = list.asIteration().model()\n    if (items.length === 1) {\n      return items[0]\n    } else {\n      return new model.LogicalOr(items)\n    }\n  },\n  LogicalAnd (list) {\n    let items = list.asIteration().model()\n    if (items.length === 1) {\n      return items[0]\n    } else {\n      return new model.LogicalAnd(items)\n    }\n  },\n  LogicalNot (list, expr) {\n    if (list.model().length % 2 === 1) {\n      return new model.LogicalNot(expr.model())\n    } else {\n      return expr.model()\n    }\n  },\n  Grouping (_lp_, expr, _rp_) {\n    return expr.model()\n  },\n  ChainedCall (calls) {\n    return new model.ChainedCall(calls.asIteration().model())\n  },\n  Call (id, argsOpt) {\n    argsOpt = argsOpt.model()\n    var args = argsOpt.length ? argsOpt[0] : []\n    return new model.Call(id.model(), args)\n  },\n  Object (_lb_, props, _rb_) {\n    return new model.Object_(props.asIteration().model())\n  },\n  Array (_lb_, items, _rb_) {\n    return new model.Array_(items.asIteration().model())\n  },\n\n  // helpers\n\n  ArgumentList (_lp_, args, _rp_) {\n    return args.asIteration().model()\n  },\n  Property (name, _colon_, value) {\n    return new model.Property(name)\n  },\n\n  // lexical rules\n\n  identifier (start, rest) {\n    return new model.Identifier(this.source.contents)\n  },\n  number (sign, int, _point_, frac, exp) {\n    return new model.Literal(parseFloat(this.source.contents))\n  },\n  string (quote1, chars, quote2) {\n    return new model.Literal(chars.source.contents)\n  },\n  regexp (slash1, body, slash2) {\n    return new model.RegExp(new RegExp(body.source.contents))\n  },\n  constant_null (_null_) {\n    return new model.Literal(null)\n  },\n  constant_true (_true_) {\n    return new model.Literal(true)\n  },\n  constant_false (_false_) {\n    return new model.Literal(false)\n  }\n}\n"]}