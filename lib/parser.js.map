{"version":3,"sources":["../src/parser.js"],"names":["parse","model","parser","semantics","str","initParser","mr","match","failed","recipePath","__dirname","recipe","eval","createSemantics","addOperation","modelActions","Module","imports","decls","Import_list","_imp_","_lbr_","items","_rbr_","_from_","moduleSpec","Import","ImportItem_simple","id","ImportItem","Declaration_const","_const_","_eq_","expr","Const","Declaration_export_const","_exp_","Declaration_export_default","_def_","Declaration_export_default_auto","LogicalOr","list","asIteration","LogicalAnd","LogicalNot","length","Grouping","_lp_","_rp_","ChainedCall","calls","Call","argsOpt","args","Object","_lb_","props","_rb_","Object_","Array","Array_","ArgumentList","Property","name","_colon_","value","identifier","start","rest","Identifier","source","contents","number","sign","int","_point_","frac","exp","Literal","parseFloat","string","quote1","chars","quote2","regexp","slash1","body","slash2","RegExp","constant_null","_null_","constant_true","_true_","constant_false","_false_"],"mappings":";;;;;QAQgBA,K,GAAAA,K;;AARhB;;AACA;;AACA;;AACA;;IAAYC,K;;;;AAEZ,IAAIC,MAAJ;AACA,IAAIC,SAAJ;;AAEO,SAASH,KAAT,CAAgBI,GAAhB,EAAqB;AAC1B,MAAI,CAACF,MAAL,EAAa;AACXG;AACD;AACD,MAAIC,KAAKJ,OAAOK,KAAP,CAAaH,GAAb,CAAT;AACA,MAAIE,GAAGE,MAAH,EAAJ,EAAiB;AACf,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAOL,UAAUG,EAAV,EAAcL,KAAd,EAAP;AACD;AACF;;AAED;;;AAGA,SAASI,UAAT,GAAuB;AACrB,MAAII,aAAa,gBAAKC,SAAL,EAAgB,kBAAhB,CAAjB;AACA,MAAIC,SAAS,sBAAaF,UAAb,EAAyB,OAAzB,CAAb;AACA;AACAP,WAAS,uBAAWU,KAAKD,MAAL,CAAX,CAAT,CAJqB,CAIa;;AAElCR,cAAYD,OAAOW,eAAP,EAAZ;AACAV,YAAUW,YAAV,CAAuB,OAAvB,EAAgCC,YAAhC;AACD;;AAED,IAAMA,eAAe;;AAEnB;;AAEAC,QAJmB,kBAIXC,OAJW,EAIFC,KAJE,EAIK;AACtB,WAAO,IAAIjB,MAAMe,MAAV,CAAiBC,QAAQhB,KAAR,EAAjB,EAAkCiB,MAAMjB,KAAN,EAAlC,CAAP;AACD,GANkB;;;AAQnB;;AAEAkB,aAVmB,uBAUNC,KAVM,EAUCC,KAVD,EAUQC,KAVR,EAUeC,KAVf,EAUsBC,MAVtB,EAU8BC,UAV9B,EAU0C;AAC3D,WAAO,IAAIxB,MAAMyB,MAAV,CAAiBD,WAAWxB,KAAX,EAAjB,EAAqCqB,MAAMrB,KAAN,EAArC,CAAP;AACD,GAZkB;AAanB0B,mBAbmB,6BAaAC,EAbA,EAaI;AACrB,WAAO,IAAI3B,MAAM4B,UAAV,CAAqBD,GAAG3B,KAAH,EAArB,EAAiC2B,GAAG3B,KAAH,EAAjC,CAAP;AACD,GAfkB;;;AAiBnB;;AAEA6B,mBAnBmB,6BAmBAC,OAnBA,EAmBSH,EAnBT,EAmBaI,IAnBb,EAmBmBC,IAnBnB,EAmByB;AAC1C,WAAO,IAAIhC,MAAMiC,KAAV,CAAgBN,GAAG3B,KAAH,EAAhB,EAA4BgC,KAAKhC,KAAL,EAA5B,EAA0C,KAA1C,CAAP;AACD,GArBkB;AAsBnBkC,0BAtBmB,oCAsBOC,KAtBP,EAsBcL,OAtBd,EAsBuBH,EAtBvB,EAsB2BI,IAtB3B,EAsBiCC,IAtBjC,EAsBuC;AACxD,WAAO,IAAIhC,MAAMiC,KAAV,CAAgBN,GAAG3B,KAAH,EAAhB,EAA4BgC,KAAKhC,KAAL,EAA5B,EAA0C,IAA1C,CAAP;AACD,GAxBkB;AAyBnBoC,4BAzBmB,sCAyBSD,KAzBT,EAyBgBE,KAzBhB,EAyBuBL,IAzBvB,EAyB6B;AAC9C,WAAO,IAAIhC,MAAMiC,KAAV,CAAgB,EAAhB,EAAoBD,KAAKhC,KAAL,EAApB,EAAkC,IAAlC,CAAP;AACD,GA3BkB;AA4BnBsC,iCA5BmB,2CA4BcN,IA5Bd,EA4BoB;AACrC,WAAO,IAAIhC,MAAMiC,KAAV,CAAgB,EAAhB,EAAoBD,KAAKhC,KAAL,EAApB,EAAkC,IAAlC,CAAP;AACD,GA9BkB;;;AAgCnB;;AAEAuC,WAlCmB,qBAkCRC,IAlCQ,EAkCF;AACf,WAAO,IAAIxC,MAAMuC,SAAV,CAAoBC,KAAKC,WAAL,GAAmBzC,KAAnB,EAApB,CAAP;AACD,GApCkB;AAqCnB0C,YArCmB,sBAqCPF,IArCO,EAqCD;AAChB,WAAO,IAAIxC,MAAM0C,UAAV,CAAqBF,KAAKC,WAAL,GAAmBzC,KAAnB,EAArB,CAAP;AACD,GAvCkB;AAwCnB2C,YAxCmB,sBAwCPH,IAxCO,EAwCDR,IAxCC,EAwCK;AACtB,QAAIQ,KAAKxC,KAAL,GAAa4C,MAAb,GAAsB,CAAtB,KAA4B,CAAhC,EAAmC;AACjC,aAAO,IAAI5C,MAAM2C,UAAV,CAAqBX,KAAKhC,KAAL,EAArB,CAAP;AACD,KAFD,MAEO;AACL,aAAOgC,KAAKhC,KAAL,EAAP;AACD;AACF,GA9CkB;AA+CnB6C,UA/CmB,oBA+CTC,IA/CS,EA+CHd,IA/CG,EA+CGe,IA/CH,EA+CS;AAC1B,WAAOf,KAAKhC,KAAL,EAAP;AACD,GAjDkB;AAkDnBgD,aAlDmB,uBAkDNC,KAlDM,EAkDC;AAClB,WAAO,IAAIjD,MAAMgD,WAAV,CAAsBC,MAAMR,WAAN,GAAoBzC,KAApB,EAAtB,CAAP;AACD,GApDkB;AAqDnBkD,MArDmB,gBAqDbvB,EArDa,EAqDTwB,OArDS,EAqDA;AACjBA,cAAUA,QAAQnD,KAAR,EAAV;AACA,QAAIoD,OAAOD,QAAQP,MAAR,GAAiBO,QAAQ,CAAR,CAAjB,GAA8B,EAAzC;AACA,WAAO,IAAInD,MAAMkD,IAAV,CAAevB,GAAG3B,KAAH,EAAf,EAA2BoD,IAA3B,CAAP;AACD,GAzDkB;AA0DnBC,QA1DmB,kBA0DXC,IA1DW,EA0DLC,KA1DK,EA0DEC,IA1DF,EA0DQ;AACzB,WAAO,IAAIxD,MAAMyD,OAAV,CAAkBF,MAAMd,WAAN,GAAoBzC,KAApB,EAAlB,CAAP;AACD,GA5DkB;AA6DnB0D,OA7DmB,iBA6DZJ,IA7DY,EA6DNjC,KA7DM,EA6DCmC,IA7DD,EA6DO;AACxB,WAAO,IAAIxD,MAAM2D,MAAV,CAAiBtC,MAAMoB,WAAN,GAAoBzC,KAApB,EAAjB,CAAP;AACD,GA/DkB;;;AAiEnB;;AAEA4D,cAnEmB,wBAmELd,IAnEK,EAmECM,IAnED,EAmEOL,IAnEP,EAmEa;AAC9B,WAAOK,KAAKX,WAAL,GAAmBzC,KAAnB,EAAP;AACD,GArEkB;AAsEnB6D,UAtEmB,oBAsETC,IAtES,EAsEHC,OAtEG,EAsEMC,KAtEN,EAsEa;AAC9B,WAAO,IAAIhE,MAAM6D,QAAV,CAAmBC,IAAnB,CAAP;AACD,GAxEkB;;;AA0EnB;;AAEAG,YA5EmB,sBA4EPC,KA5EO,EA4EAC,IA5EA,EA4EM;AACvB,WAAO,IAAInE,MAAMoE,UAAV,CAAqB,KAAKC,MAAL,CAAYC,QAAjC,CAAP;AACD,GA9EkB;AA+EnBC,QA/EmB,kBA+EXC,IA/EW,EA+ELC,GA/EK,EA+EAC,OA/EA,EA+ESC,IA/ET,EA+EeC,GA/Ef,EA+EoB;AACrC,WAAO,IAAI5E,MAAM6E,OAAV,CAAkBC,WAAW,KAAKT,MAAL,CAAYC,QAAvB,CAAlB,CAAP;AACD,GAjFkB;AAkFnBS,QAlFmB,kBAkFXC,MAlFW,EAkFHC,KAlFG,EAkFIC,MAlFJ,EAkFY;AAC7B,WAAO,IAAIlF,MAAM6E,OAAV,CAAkBI,MAAMZ,MAAN,CAAaC,QAA/B,CAAP;AACD,GApFkB;AAqFnBa,QArFmB,kBAqFXC,MArFW,EAqFHC,IArFG,EAqFGC,MArFH,EAqFW;AAC5B,WAAO,IAAItF,MAAMuF,MAAV,CAAiB,IAAIA,MAAJ,CAAWF,KAAKhB,MAAL,CAAYC,QAAvB,CAAjB,CAAP;AACD,GAvFkB;AAwFnBkB,eAxFmB,yBAwFJC,MAxFI,EAwFI;AACrB,WAAO,IAAIzF,MAAM6E,OAAV,CAAkB,IAAlB,CAAP;AACD,GA1FkB;AA2FnBa,eA3FmB,yBA2FJC,MA3FI,EA2FI;AACrB,WAAO,IAAI3F,MAAM6E,OAAV,CAAkB,IAAlB,CAAP;AACD,GA7FkB;AA8FnBe,gBA9FmB,0BA8FHC,OA9FG,EA8FM;AACvB,WAAO,IAAI7F,MAAM6E,OAAV,CAAkB,KAAlB,CAAP;AACD;AAhGkB,CAArB","file":"parser.js","sourcesContent":["import { readFileSync } from 'fs'\r\nimport { join } from 'path'\r\nimport { makeRecipe } from 'ohm-js'\r\nimport * as model from './model'\r\n\r\nvar parser\r\nvar semantics\r\n\r\nexport function parse (str) {\r\n  if (!parser) {\r\n    initParser()\r\n  }\r\n  let mr = parser.match(str)\r\n  if (mr.failed()) {\r\n    return null\r\n  } else {\r\n    return semantics(mr).model()\r\n  }\r\n}\r\n\r\n/**\r\n * Loads parser definition and initilizes parser semantics.\r\n */\r\nfunction initParser () {\r\n  let recipePath = join(__dirname, '../ohm/recipe.js')\r\n  let recipe = readFileSync(recipePath, 'utf-8')\r\n  // this is the recommended way of loading a parser\r\n  parser = makeRecipe(eval(recipe)) // eslint-disable-line\r\n\r\n  semantics = parser.createSemantics()\r\n  semantics.addOperation('model', modelActions)\r\n}\r\n\r\nconst modelActions = {\r\n\r\n  // module\r\n\r\n  Module (imports, decls) {\r\n    return new model.Module(imports.model(), decls.model())\r\n  },\r\n\r\n  // import\r\n\r\n  Import_list (_imp_, _lbr_, items, _rbr_, _from_, moduleSpec) {\r\n    return new model.Import(moduleSpec.model(), items.model())\r\n  },\r\n  ImportItem_simple (id) {\r\n    return new model.ImportItem(id.model(), id.model())\r\n  },\r\n\r\n  // declaration\r\n\r\n  Declaration_const (_const_, id, _eq_, expr) {\r\n    return new model.Const(id.model(), expr.model(), false)\r\n  },\r\n  Declaration_export_const (_exp_, _const_, id, _eq_, expr) {\r\n    return new model.Const(id.model(), expr.model(), true)\r\n  },\r\n  Declaration_export_default (_exp_, _def_, expr) {\r\n    return new model.Const('', expr.model(), true)\r\n  },\r\n  Declaration_export_default_auto (expr) {\r\n    return new model.Const('', expr.model(), true)\r\n  },\r\n\r\n  // expression\r\n\r\n  LogicalOr (list) {\r\n    return new model.LogicalOr(list.asIteration().model())\r\n  },\r\n  LogicalAnd (list) {\r\n    return new model.LogicalAnd(list.asIteration().model())\r\n  },\r\n  LogicalNot (list, expr) {\r\n    if (list.model().length % 2 === 1) {\r\n      return new model.LogicalNot(expr.model())\r\n    } else {\r\n      return expr.model()\r\n    }\r\n  },\r\n  Grouping (_lp_, expr, _rp_) {\r\n    return expr.model()\r\n  },\r\n  ChainedCall (calls) {\r\n    return new model.ChainedCall(calls.asIteration().model())\r\n  },\r\n  Call (id, argsOpt) {\r\n    argsOpt = argsOpt.model()\r\n    var args = argsOpt.length ? argsOpt[0] : []\r\n    return new model.Call(id.model(), args)\r\n  },\r\n  Object (_lb_, props, _rb_) {\r\n    return new model.Object_(props.asIteration().model())\r\n  },\r\n  Array (_lb_, items, _rb_) {\r\n    return new model.Array_(items.asIteration().model())\r\n  },\r\n\r\n  // helpers\r\n\r\n  ArgumentList (_lp_, args, _rp_) {\r\n    return args.asIteration().model()\r\n  },\r\n  Property (name, _colon_, value) {\r\n    return new model.Property(name)\r\n  },\r\n\r\n  // lexical rules\r\n\r\n  identifier (start, rest) {\r\n    return new model.Identifier(this.source.contents)\r\n  },\r\n  number (sign, int, _point_, frac, exp) {\r\n    return new model.Literal(parseFloat(this.source.contents))\r\n  },\r\n  string (quote1, chars, quote2) {\r\n    return new model.Literal(chars.source.contents)\r\n  },\r\n  regexp (slash1, body, slash2) {\r\n    return new model.RegExp(new RegExp(body.source.contents))\r\n  },\r\n  constant_null (_null_) {\r\n    return new model.Literal(null)\r\n  },\r\n  constant_true (_true_) {\r\n    return new model.Literal(true)\r\n  },\r\n  constant_false (_false_) {\r\n    return new model.Literal(false)\r\n  }\r\n}\r\n"]}